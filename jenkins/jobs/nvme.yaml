- project:
    name: NVMe
    node: NVME
    jobs:
      - 'NVMe'

- job-template:
    name: 'NVMe'
    node: '{node}'
    concurrent: true
    parameters:
    builders:
      - inject:
          properties-content: |
            LOGDIR=$WORKSPACE/ci-artifacts/logs
            HCA=MT27710
            PATH=$PATH:/usr/sbin
            EXT_SERVER=52.169.200.208
            LOGSERVER=cloudx@$EXT_SERVER
            IMAGE_SERVER=$EXT_SERVER
            PATH=$PATH:/usr/sbin
            HORIZON_REPO=ssh://cloudx-17/images/openstack/horizon
            REQUIREMENTS_REPO=ssh://cloudx-17/images/openstack/requirements
            KEYSTONE_REPO=ssh://cloudx-17/images/openstack/keystone
            NEUTRON_REPO=ssh://cloudx-17/images/openstack/neutron
            GLANCE_REPO=ssh://cloudx-17/images/openstack/glance
            MLNX_CINDER_BRANCH=refs/changes/56/505556/8
            MLNX_OS_BRICK_BRANCH=refs/changes/42/482642/24
            NOVA_BRANCH=refs/changes/40/482640/11
      - check-environment
      - mlnx-project-config
      - clean-environment
      - clone-devstack
      - apply-workarounds-pre-stack
      - apply-workarounds-pre-stack-{name}
      - clean-environment-{name}
      - configure-devstack-{name}
      - run-stacksh # Running Devstack
      - apply-workarounds-post-stack
      - apply-workarounds-post-stack-{name}
      - run-tests-{name}
      - run-tests-{name}-Tempest
      - produce-readme-file
    properties:
      - build-discarder:
          days-to-keep: 60
          num-to-keep: 200
          artifact-days-to-keep: 60
          artifact-num-to-keep: 200
    publishers:
      - email-ext:
          recipients: lennyb@mellanox.com
          subject: Failed Mellanox CI {name}
          failure: true
          body: "Hello, my dear friend,\nunfortunately we have some issues in CI,\nplease, take a beer and lets take a look\n\n$DEFAULT_CONTENT\nhttp://$EXT_SERVER/$LOG_PATH/\nhttp://$EXT_SERVER/$JOB_NAME_$BUILD_NUMBER"
      - upload-console-log #This line must be the last one

- builder:
    name: clean-environment-NVMe
    builders:
        - shell: |
            #!/bin/bash -x
            echo "Cleaning NVME"
            sudo nvmetcli clear 2>&1|tee

- builder:
    name: apply-workarounds-pre-stack-NVMe
    builders:
        - shell: |
            #!/bin/bash -x
            phase="apply-workarounds-pre-stack-NVMe"
            echo "STARTED: ############## $phase  ###################"
            cd $WORKSPACE

            [ ! -d nvmetcli ] && git clone git://git.infradead.org/users/hch/nvmetcli.git
            pushd nvmetcli
            git pull
            sudo python ./setup.py install
            popd

            [ ! -d nvme-cli ] && git clone https://github.com/linux-nvme/nvme-cli.git
            pushd nvme-cli
            git pull
            make && sudo make install
            popd

            [ ! -d configshell-fb ] && git clone https://github.com/agrover/configshell-fb
            pushd configshell-fb
            git pull
            sudo python ./setup.py install
            popd

            for module in nvme nvmet nvmet-rdma nvme-rdma
            do
                sudo modprobe $module
                let status=status+$?
            done
            nc=$(lsmod |awk '{print $1}'|egrep "nvme$|nvmet|nvmet_rdma|nvme_rdma"|wc -l)
            if [ $nc -lt 4 ];then
                lsmod |grep nvme
                echo "Check if nvme|nvmet|nvmet_rdma|nvme_rdma are up"
                let status=status+$?
            fi
            exit $status

- builder:
    name: apply-workarounds-post-stack-NVMe
    builders:
        - shell: |
            #!/bin/bash -x
            echo "apply-workarounds-post-stack-NVMe"
            exit 0
            #if [ -z $ZUUL_CHANGE ]; then
            #    cd /opt/stack/os-brick
            #    git fetch git://git.openstack.org/openstack/os-brick $MLNX_OS_BRICK_BRANCH && git cherry-pick FETCH_HEAD
            #    cd /opt/stack/cinder
            #    git fetch git://git.openstack.org/openstack/cinder $MLNX_CINDER_BRANCH && git cherry-pick FETCH_HEAD
            #else
                if [ $ZUUL_CHANGE != '482642' ]; then
                    cd /opt/stack/os-brick
                    git fetch git://git.openstack.org/openstack/os-brick $MLNX_OS_BRICK_BRANCH && git cherry-pick FETCH_HEAD
                fi
                if [ $ZUUL_CHANGE != '505556' ]; then
                    cd /opt/stack/cinder
                    git fetch git://git.openstack.org/openstack/cinder $MLNX_CINDER_BRANCH && git cherry-pick FETCH_HEAD
                fi
            #fi

            sudo chmod 777 /etc/cinder/rootwrap.d/volume.filters
            sudo cat >> /etc/cinder/rootwrap.d/volume.filters <<EOF
            # cinder/volume/targets/nvmet.py
            nvmetcli: CommandFilter, nvmetcli, root
            EOF

            sudo systemctl restart devstack@c-vol.service
            sudo systemctl restart devstack@n-cpu.service

- builder:
    name: run-tests-NVMe-Tempest
    builders:
      - shell: |
                #!/bin/bash +ex
                echo "============ Starting tempest tests ====================="
                tests=(
                       tempest.scenario.test_minimum_basic.TestMinimumBasicScenario
                       tempest.scenario.test_snapshot_pattern.TestSnapshotPattern
                       tempest.scenario.test_volume_boot_pattern.TestVolumeBootPatternV2
                       tempest.scenario.test_stamp_pattern.TestStampPattern
                       tempest.api.volume.admin.test_multi_backend.VolumeMultiBackendTest
                       tempest.api.volume.admin.test_volume_types_extra_specs_negative
                )
                cd /opt/stack/tempest
                testr list-tests ${tests[@]}
                testr init
                virtualenv virt --no-site-packages
                . virt/bin/activate
                virt/bin/pip install -U -r requirements.txt
                testr run ${tests[@]}
                test_pass=$?
                deactivate

                if [[ $test_pass -ne 0 ]]; then
                    echo "FINISHED with ERROR: ############## $phase  ###################"
                    exit 1
                fi

- builder:
    name: run-tests-NVMe
    builders:
        - shell: |
            #!/bin/bash
            if [ ! -z $ZUUL_CHANGE ]; then
                if [ $ZUUL_CHANGE != '482642' ] || [ $ZUUL_CHANGE != '505556' ]; then
                    echo "NVME tests skiped"
                    exit 0
                fi
            fi
                phase="RUN-TESTS-attach"
                pushd $WORKSPACE/devstack
                status=0
                . openrc admin
                cinder create 1
                image=$(glance image-list|grep "cir"|awk '{print $4}')
                nova boot --flavor m1.small --image $image vm1
                sleep 240
                nova list
                cinder list
                echo "Attaching nova volume"
                nova=$(nova list | awk '{print $2}' | grep '-')
                cinder_vol=$(cinder list| awk '{print $2}' | grep '-')

                nova volume-attach $nova $cinder_vol
                sleep 20
                vstat=$(cinder list|grep lvmdriver-1 |awk '{print $4}')
                nova list
                cinder list
                if [ "$vstat" != "in-use" ]; then
                   cinder list
                   nova list
                   echo "ERROR: Volume attach failed. Status not in-use."
                   exit 1
                fi
                echo "Detaching nova volume"
                nova volume-detach $nova $cinder_vol
                sleep 30
                vstat=$(cinder list|grep lvmdriver-1 |awk '{print $4}')
                if [ "$vstat" != "available" ]; then
                   cinder list
                   nova list
                   echo "ERROR: Volume detach failed. Status still $vstat"
                   exit 1
                fi
                nova list
                cinder list
                sleep 60
                echo "Deleting volume"
                cinder delete $cinder_vol
                sleep 60
                c=$(cinder list | grep lvm)
                if [ "$c" != "" ]; then
                    echo "ERROR Cinder not deleted"
                    cinder list
                    status=1
                fi
                echo "FINISHED: ############## $phase status=$status ###################"
                exit $status

- builder:
    name: configure-devstack-NVMe
    builders:
        - shell: |
            #!/bin/bash -ex
            phase="configure-devstack-NVMe"
            echo "STARTED: ############## $phase  ###################"

            hca=$(lspci |grep Mellanox | awk '{print $6}'|grep -v '/'|head -n1)
            HCA=${HCA:-hca}

            export pci=$(lspci |grep Mell|grep $HCA |head -n1|awk '{print $1}'| sed s/\.0\$//g)
            export pf=$(ls -l /sys/class/net/ | grep $pci|awk '{print $9}' | head -n1)
            echo "Using pci=$pci pf=$pf HCA=$HCA"
            if [[ -n $ZUUL_PROJECT ]]; then
              project=$(echo $ZUUL_PROJECT | cut -d'/' -f2)
              refspec=$(echo ${ZUUL_CHANGES##*^} | rev|cut -d':' -f1|rev)
              project=${project//-/_}
              export ${project^^}_BRANCH=$refspec
            fi

            MLNX_PATCHES=""
            #if [ -z $ZUUL_CHANGE ]; then
                export MLNX_PATCHES="CINDER_BRANCH=$MLNX_CINDER_BRANCH
            OS_BRICK_BRANCH=$MLNX_OS_BRICK_BRANCH
            "
            #fi
            #elif [ $ZUUL_CHANGE != '482642' ]; then
            #    export MLNX_PATCHES="OS_BRICK_BRANCH=$MLNX_OS_BRICK_BRANCH"
            #elif [ [ $ZUUL_CHANGE != '505556'] ;then
            #    export MLNX_PATCHES="CINDER_BRANCH=$MLNX_CINDER_BRANCH"
            #fi

            cat > $WORKSPACE/devstack/local.conf <<EOF
            [[local|localrc]]
            DOWNLOAD_DEFAULT_IMAGES=True
            ADMIN_PASSWORD=password
            MYSQL_PASSWORD=password
            RABBIT_PASSWORD=password
            SERVICE_PASSWORD=password
            SERVICE_TOKEN=servicetoken

            HOST_IP=$(host $(hostname) | cut -d' ' -f4)

            NOVA_BRANCH=$NOVA_BRANCH
            $MLNX_PATCHES

            RECLONE=yes
            LOG_COLOR=False
            PIP_UPGRADE=True
            LOGDIR=${LOGDIR:-/opt/stack/logs}
            LOGFILE=$LOGDIR/stack.sh.log
            LIBS_FROM_GIT=os-brick

            # Cinder
            VOLUME_GROUP_NAME="stack-volumes"
            VOLUME_NAME_PREFIX="volume-"
            VOLUME_BACKING_FILE_SIZE=10250M

            DISABLED_SERVICES=n-net
            enable_service = q-svc q-agt q-dhcp q-l3 q-meta neutron tempest
            disable_service = horizon
            #ENABLED_SERVICES+=,q-svc,q-agt,q-dhcp,q-l3,q-meta,q-metering,neutron
            #disable_service=horizon

            ## Neutron options
            Q_USE_SECGROUP=True

            # Neutron ML2 with OpenVSwitch
            NEUTRON_CREATE_INITIAL_NETWORKS=True
            Q_PLUGIN=ml2
            Q_AGENT=openvswitch
            Q_ML2_TENANT_NETWORK_TYPE=vxlan
            Q_L3_ENABLED=True

            PUBLIC_NETWORK_NAME=external
            PUBLIC_PHYSICAL_NETWORK=public
            PHYSICAL_NETWORK=default

            # Required for l3-agent to connect to external-network-bridge
            PUBLIC_BRIDGE=br-ex
            OVS_BRIDGE_MAPPINGS=public:br-ex

            [[post-config|/etc/cinder/cinder.conf]]
            [DEFAULT]
            enabled_backends=lvmdriver-1

            [lvmdriver-1]
            image_volume_cache_enabled = True
            volume_clear = zero
            lvm_type = default
            iscsi_helper = nvmet
            volume_group =  stack-volumes-lvmdriver-1
            volume_driver = cinder.volume.drivers.lvm.LVMVolumeDriver
            volume_backend_name = lvmdriver-1
            nvme_target_ip = 1.1.1.1
            nvme_target_port = 4420
            nvmet_port_id = 1
            nvmet_ns_is = 10
            target_prefix = default-subsys

            [[test-config|\$TEMPEST_CONFIG]]
            [volume]
            backend_names = lvmdriver-1
            [volume-feature-enabled]
            multi_backend = False

            [auth]
            tempest_roles = Admin
            EOF
            echo "FINISHED: ############## $phase  ###################"
