- project:
    name: Build-DPDK
    node: builder
    jobs:
      - 'Build-DPDK'

- job-template:
    name: 'Build-DPDK'
    node: '{node}'
    triggers:
      - timed: '@monthly'
    concurrent: false
    parameters:
      - string:
          name: dpdk_version
          default: latest
      - string:
          name: ovs_branch
          default: branch-2.10


    builders:
      - inject:
          properties-content: |
            LOGDIR=$WORKSPACE/ci-artifacts/logs
            PATH=$PATH:/usr/sbin
            EXT_SERVER=13.74.249.42
            LOGSERVER=cloudx@$EXT_SERVER
            IMAGE_SERVER=$EXT_SERVER
            PATH=$PATH:/usr/sbin
            #OUTPUT=/tmp/lny/20181009
            OUTPUT=/net/mtrlabfs01/vol/QA/qa/qa/cloudx/upstream/ovs
      #- clean-build-machine
      - build-dpdk
      - produce-readme-file
    properties:
      - build-discarder:
          days-to-keep: 60
          num-to-keep: 100
          artifact-days-to-keep: 60
          artifact-num-to-keep: 100
    publishers:
      - email-ext:
          recipients: lennyb@mellanox.com
          subject: Failed Mellanox CI {name}
          failure: true
          body: "Hello, my dear friend,\nunfortunately we have some issues in CI,\nplease, take a beer and lets take a look\n\n$DEFAULT_CONTENT\nhttp://$EXT_SERVER/$LOG_PATH/\nhttp://$EXT_SERVER/$JOB_NAME_$BUILD_NUMBER"
      - upload-console-log #This line must be the last one
    wrappers:
      - timeout:
          timeout: 320
          fail: true


- builder:
    name: build-dpdk
    builders:
        - shell: |
            #!/bin/bash -x
            set -o pipefail
            function version_gt() { test "$(printf '%s\n' "$@" | sort -V | head -n 1)" != "$1"; }

            status=0
            pushd /home_stack
            rm -rf dpdk* ovs* index.html
            version_to_build=${dpdk_version}

            wget http://docs.openvswitch.org/en/latest/intro/install/dpdk/ 2>&1|tee > /dev/null
            # Evaluate the latest upstream version
            if [ "$version_to_build" == "latest" ]; then
                version_to_build=$(html2text index.html |grep '* DPDK'|awk '{print $NF}')
                if [ -d $OUTPUT/latest ]; then
                    echo "Latest version on http://docs.openvswitch.org/en/latest/intro/install/dpdk/ is $version_to_build"
                    latest_built_version=$(basename $(ls $OUTPUT/latest/dpdk-*.centos.x86_64.rpm|head -n1)|cut -d'-' -f2)
                    echo "latest_built_version=$latest_built_version version_to_build=$version_to_build"
                    if [ "$latest_built_version" != "" ]; then
                        if ! version_gt $version_to_build $latest_built_version; then
                            echo "$latest_built_version is greater than $version_to_build"
                            echo "No newer kernels on https://cdn.kernel.org/pub/linux/kernel/v4.x/"
                        fi
                    fi
                fi
            fi

            ovs_version=$(echo $ovs_branch|cut -d'-' -f2)
            wget $(html2text index.html |grep tar.xz|grep wget|awk '{print $NF}') 2>&1|tee > /dev/null
            sudo mkdir -p /root/rpmbuild/SOURCES/
            sudo mv dpdk*.tar.xz /root/rpmbuild/SOURCES/

            git clone https://src.fedoraproject.org/git/rpms/dpdk.git
            cd dpdk/

            #TOFIX
            echo "!!!!!!!!!!!!! Temporal workaround until master is fixed"
            git checkout 079deeea6a524621872cd4939b3ceb49a9da8bbb -b 079deeea6a524621872cd4939b3ceb49a9da8bbb

            cur_ver=$(cat /home_stack/dpdk/dpdk.spec |grep Version)
            sed -i "s/$cur_ver/Version: $version_to_build/g" dpdk.spec
            #sed -i '/Epoch/d' dpdk.spec
            #sed -i '/Version:/aEpoch: 44' dpdk.spec

            sed -i 's/python3-sphinx/python-sphinx/g' dpdk.spec
            sed -i 's/Requires: %{name}%{?_isa} = %{epoch}:%{version}-%{release} python3/Requires: %{name}%{?_isa} = %{epoch}:%{version}-%{release} python/g' dpdk.spec
            sed -i 's/# Enable automatic driver loading from this path/# Enable automatic driver loading from this path\nsetconf CONFIG_RTE_LIBRTE_MLX4_PMD y\nsetconf CONFIG_RTE_LIBRTE_MLX5_PMD y/g' dpdk.spec

            sudo cp *.patch /root/rpmbuild/SOURCES/

            log=$LOGDIR/kernel-${version_to_build}.log
            sudo rpmbuild -ba dpdk.spec 2>&1|tee > $log

            sudo sh -c 'rm -f /root/rpmbuild/RPMS/x86_64/dpdk-tools-*'
            sudo sh -c 'rm -f /root/rpmbuild/RPMS/x86_64/dpdk-examples-*'
            sudo sh -c 'rm -f /root/rpmbuild/RPMS/x86_64/dpdk-debuginfo-*'
            sudo yum remove -y $(rpm -qa|grep dpdk)
            sudo sh -c 'sudo yum install -y /root/rpmbuild/RPMS/x86_64/dpdk-*'

            sudo mkdir -p $OUTPUT/$ovs_version
            sudo sh -c "cp /root/rpmbuild/RPMS/*/*dpdk* $OUTPUT/$ovs_version"

            cd /home_stack/
            git clone https://github.com/openvswitch/ovs.git
            cd ovs
            git checkout origin/$ovs_branch -b $ovs_branch
            sed -e 's/@VERSION@/0.0.1/' rhel/openvswitch-fedora.spec.in > /tmp/ovs.spec
            sudo yum-builddep -y /tmp/ovs.spec

            sed -i -e 's/-n %{_py2}-openvswitch/-n python2-openvswitch/g' rhel/openvswitch-fedora.spec.in
            sed -i '/Version:/aEpoch: 44' rhel/openvswitch-fedora.spec.in
            ./boot.sh
            ./configure
            make rpm-fedora RPMBUILD_OPT="--with dpdk --without check"
            mkdir -p $OUTPUT/$ovs_version
            cp rpm/rpmbuild/RPMS/*/*openvswitch* $OUTPUT/$ovs_version
            cp rpm/rpmbuild/RPMS/x86_64/* $OUTPUT/$ovs_version
            cp rpm/rpmbuild/RPMS/noarch/* $OUTPUT/$ovs_version
            ln -snf $OUTPUT/$ovs_version $OUTPUT/latest

            exit $?
