- project:
    name: TEMPLATE
    node: master
    jobs:
      - 'TEMPLATE'

- job-template:
    name: 'TEMPLATE'
    node: '{node}'
    concurrent: false
    parameters:
    builders:
      - inject:
          properties-content: |
            LOGDIR=$WORKSPACE/ci-artifacts/logs
            HCA=MT27710
            PATH=$PATH:/usr/sbin
            EXT_SERVER=52.169.200.208
            LOGSERVER=cloudx@$EXT_SERVER
            IMAGE_SERVER=$EXT_SERVER
            PATH=$PATH:/usr/sbin
      - check-environment
      - mlnx-project-config
      - clean-environment
      - clone-devstack
      - apply-workarounds-pre-stack
      - configure-devstack-{name}
      - run-stacksh # Running Devstack
      - apply-workarounds-post-stack
      - run-tests-{name}
      - produce-readme-file
    properties:
      - build-discarder:
          days-to-keep: 60
          num-to-keep: 200
          artifact-days-to-keep: 60
          artifact-num-to-keep: 200
    publishers:
      - email-ext:
          recipients: lennyb@mellanox.com
          subject: Failed Mellanox CI {name}
          failure: true
          body: "Hello, my dear friend,\nunfortunately we have some issues in CI,\nplease, take a beer and lets take a look\n\n$DEFAULT_CONTENT\nhttp://$EXT_SERVER/$LOG_PATH/\nhttp://$EXT_SERVER/$JOB_NAME_$BUILD_NUMBER"
      - upload-console-log #This line must be the last one



- builder:
    name: run-tests-TEMPLATE
    builders:
        - shell: |
            #!/bin/bash
            phase="RUN-TESTS-Neutron"
            echo "STARTED: ############## $phase  ###################"

- builder:
    name: configure-devstack-TEMPLATE
    builders:
        - shell: |
            #!/bin/bash -ex
            phase="configure-devstack-TEMPLATE"
            echo "STARTED: ############## $phase  ###################"

            hca=$(lspci |grep Mellanox | awk '{print $6}'|grep -v '/'|head -n1)
            HCA=${HCA:-hca}

            export pci=$(lspci |grep Mell|grep $HCA |head -n1|awk '{print $1}'| sed s/\.0\$//g)
            export pf=$(ls -l /sys/class/net/ | grep $pci|awk '{print $9}' | head -n1)
            echo "Using pci=$pci pf=$pf HCA=$HCA"

            cat > $WORKSPACE/devstack/local.conf <<EOF
            [[local|localrc]]
            DOWNLOAD_DEFAULT_IMAGES=False
            IMAGE_URLS="http://$IMAGE_SERVER/images/cirros-mellanox_eth.img,"
            MULTI_HOST=False
            ADMIN_PASSWORD=password
            MYSQL_PASSWORD=password
            RABBIT_PASSWORD=password
            SERVICE_PASSWORD=password
            HOST_IP=$(host $(hostname) | cut -d' ' -f4)
            SYSLOG=False
            USE_SCREEN=True
            SUBNETPOOL_PREFIX_V4=172.0.0.0/16
            pci=$pci
            pf=$pf
            PUBLIC_INTERFACE=$pf
            # Logging
            LOGDIR=\${LOGDIR:-/opt/stack/logs}
            LOGFILE=\$LOGDIR/stack.sh.log
            LOG_COLOR=False
            RECLONE=yes
            # Cinder
            VOLUME_BACKING_FILE_SIZE=1000M
            # Keystone
            SERVICE_TOKEN=servicetoken
            # Neutron
            Q_PLUGIN=ml2
            Q_AGENT=openvswitch
            Q_ML2_PLUGIN_MECHANISM_DRIVERS=openvswitch,sriovnicswitch
            Q_USE_DEBUG_COMMAND=False
            Q_USE_SECGROUP=True
            ENABLE_TENANT_VLANS=True
            Q_ML2_PLUGIN_TYPE_DRIVERS=vlan
            ENABLE_TENANT_TUNNELS=False
            Q_ML2_TENANT_NETWORK_TYPE=vlan
            PHYSICAL_NETWORK=default
            PHYSICAL_INTERFACE=${pf}
            TENANT_VLAN_RANGE=2:100
            NETWORK_API_EXTENSIONS=dhcp_agent_scheduler,external-net,ext-gw-mode,binding,quotas,agent,l3_agent_scheduler,provider,router,extraroute,security-group
            OVS_PHYSICAL_BRIDGE=br-$pf
            ALLOW_NEUTRON_DB_MIGRATIONS=true
            Q_USE_PROVIDERNET_FOR_PUBLIC=False
            # Services
            disable_service n-net n-cauth h-eng h-api h-api-cfn h-api-cw c-vol etcd3
            enable_service n-xvnc n-novnc horizon
            enable_service neutron q-svc q-dhcp q-l3 q-meta q-agt q-sriov-agt q-qos
            enable_plugin neutron git://git.openstack.org/openstack/neutron $NEUTRON_BRANCH
            # Optional, to enable tempest configuration as part of devstack
            enable_service tempest
            SCREEN=True
            EOF
            echo "FINISHED: ############## $phase  ###################"
