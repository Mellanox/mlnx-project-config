- builder:
    name: apply-workarounds-post-stack-cinder-lio
    builders:
        - shell: |
            #!/bin/bash -x
            phase="apply-workarounds-post-stack-cinder-lio"
            sudo pip install rtslib_fb===2.1.63
            sudo dpkg --purge python-rtslib-fb
            sudo systemctl restart devstack@c-vol.service
            sudo systemctl restart devstack@c-sch.service
            sudo systemctl stop tgt


- builder:
    name: configure-devstack-cinder
    builders:
        - shell: |
            #!/bin/bash -ex
            phase="configure-devstack-Cinder-$CINDER_PROTOCOL"
            echo "STARTED: ############## $phase  ###################"

            HCA=$(lspci |grep Mellanox | awk '{print $6}'|grep -v '/'|head -n1)

            i=1
            export ip1=1.1.1.1
            export ip2=2.2.2.2

            for pci in $(lspci |grep $HCA | grep -v Virtual | awk '{print $1}');do
                for p in $(ls -l /sys/class/net/|grep $pci | awk '{print $9}');do
                    sudo ifconfig $p $i.$i.$i.$i/24 up
                    let i=i+1
                done
            done

            if [[ -n $ZUUL_PROJECT ]]; then
              project=$(echo $ZUUL_PROJECT | cut -d'/' -f2)
              refspec=$(echo ${ZUUL_CHANGES##*^} | rev|cut -d':' -f1|rev)
              project=${project//-/_}
              export ${project^^}_BRANCH=$refspec
            fi


            cat > $WORKSPACE/devstack/local.conf <<EOF
            [[local|localrc]]
            DOWNLOAD_DEFAULT_IMAGES=True
            ADMIN_PASSWORD=password
            MYSQL_PASSWORD=password
            RABBIT_PASSWORD=password
            SERVICE_PASSWORD=password
            SERVICE_TOKEN=servicetoken

            HOST_IP=$(host $(hostname) | cut -d' ' -f4)

            RECLONE=yes
            LOG_COLOR=False
            PIP_UPGRADE=True
            LOGDIR=${LOGDIR:-/opt/stack/logs}
            LOGFILE=$LOGDIR/stack.sh.log
            LIBS_FROM_GIT=os-brick

            # Cinder
            VOLUME_GROUP_NAME="stack-volumes"
            VOLUME_NAME_PREFIX="volume-"
            VOLUME_BACKING_FILE_SIZE=10250M

            #DISABLED_SERVICES=n-net
            #ENABLED_SERVICES+=,q-svc,q-agt,q-dhcp,q-l3,q-meta,q-metering,neutron
            #disable_service=horizon
            DISABLED_SERVICES=n-net
            enable_service = q-svc q-agt q-dhcp q-l3 q-meta neutron tempest
            disable_service = horizon


            ## Neutron options
            Q_USE_SECGROUP=True

            # Neutron ML2 with OpenVSwitch
            NEUTRON_CREATE_INITIAL_NETWORKS=True
            Q_PLUGIN=ml2
            Q_AGENT=openvswitch
            Q_ML2_TENANT_NETWORK_TYPE=vxlan
            Q_L3_ENABLED=True

            PUBLIC_NETWORK_NAME=external
            PUBLIC_PHYSICAL_NETWORK=public
            PHYSICAL_NETWORK=default

            # Required for l3-agent to connect to external-network-bridge
            PUBLIC_BRIDGE=br-ex
            OVS_BRIDGE_MAPPINGS=public:br-ex

            [[post-config|/etc/cinder/cinder.conf]]
            [DEFAULT]
            enabled_backends=lvmdriver-1,backend1

            [lvmdriver-1]
            lvm_type = default
            iscsi_helper = $CINDER_PROTOCOL
            volume_group = stack-volumes-lvmdriver-1
            volume_driver = cinder.volume.drivers.lvm.LVMVolumeDriver
            volume_backend_name = lvmdriver-1
            iscsi_protocol = iser
            iscsi_ip_address = $ip1

            [backend1]
            lvm_type = default
            iscsi_helper = $CINDER_PROTOCOL
            volume_group = stack-volumes-lvmdriver-1
            volume_driver = cinder.volume.drivers.lvm.LVMVolumeDriver
            volume_backend_name = backend1
            iscsi_ip_address = $ip2
            iscsi_protocol = iser

            [[test-config|/opt/stack/tempest/etc/tempest.conf]]
            [volume]
            backend_names = lvmdriver-1,backend1
            [volume-feature-enabled]
            multi_backend = True

            EOF
            echo "FINISHED: ############## $phase  ###################"

- project:
    name: Cinder-ISER-ISCSI
    github-org: openstack-dev
    node: CINDER
    jobs:
        - 'Cinder-ISER-ISCSI'

- project:
    name: Cinder-ISER-LIO
    github-org: openstack-dev
    node: CINDER
    jobs:
        - 'Cinder-ISER-LIO'

########### SimX #############################
- project:
    name: SimX-Run-ISER-LIO
    github-org: openstack-dev
    node: CINDER-SIMX-LIO
    jobs:
        - 'SimX-Run-ISER-LIO'

- project:
    name: SimX-Run-ISER-ISCSI
    github-org: openstack-dev
    node: CINDER-SIMX-ISCSI
    jobs:
        - 'SimX-Run-ISER-ISCSI'

- project:
    name: SimX-Run-VM
    github-org: openstack-dev
    node: SimX-Server
    jobs:
        - 'SimX-Run-VM'


- job-template:
    name: 'Cinder-ISER-ISCSI'
    node: '{node}'
    builders:
      - inject:
          properties-content: |
            LOGDIR=$WORKSPACE/ci-artifacts/logs
            EXT_SERVER=52.169.200.208
            LOGSERVER=cloudx@$EXT_SERVER
            HCA=mlx4
            IMAGE_SERVER=52.169.200.208
            PATH=$PATH:/usr/sbin
            GLANCE_REPO=git://git.openstack.org/openstack/glance
            NEUTRON_REPO=git://git.openstack.org/openstack/neutron
            KEYSTONE_REPO=git://git.openstack.org/openstack/keystone
            TEMPEST_REPO=git://git.openstack.org/openstack/tempest
            HORIZON_REPO=git://git.openstack.org/openstack/horizon
            NOVA_REPO=git://git.openstack.org/openstack/nova
            FORCE=yes
            CINDER_PROTOCOL=tgtadm
      - check-environment
      - mlnx-project-config
      - clean-environment
      - clone-devstack
      - apply-workarounds-pre-stack
      - configure-devstack-cinder
      - run-stacksh # Running Devstack
      - apply-workarounds-post-stack
      - run-tests-cinder
      - produce-readme-file
    properties:
      - build-discarder:
          days-to-keep: 70
          num-to-keep: 300
          artifact-days-to-keep: 70
          artifact-num-to-keep: 500
    publishers:
      - email-ext:
          recipients: mlnx-openstack-ci@dev.mellanox.co.il
          subject: cinder job is being failed, please debug
          failure: true
      - upload-console-log
    wrappers:
      - timeout:
          timeout: 320
          fail: true

- job-template:
    name: 'SimX-Run-ISER-LIO'
    node: '{node}'
    concurrent: false
    builders:
      - inject:
          properties-content: |
            LOGDIR=$WORKSPACE/ci-artifacts/logs
            EXT_SERVER=52.169.200.208
            LOGSERVER=cloudx@$EXT_SERVER
            HCA=mlx5
            IMAGE_SERVER=52.169.200.208
            PATH=$PATH:/usr/sbin
            GLANCE_REPO=git://git.openstack.org/openstack/glance
            NEUTRON_REPO=git://git.openstack.org/openstack/neutron
            KEYSTONE_REPO=git://git.openstack.org/openstack/keystone
            TEMPEST_REPO=git://git.openstack.org/openstack/tempest
            HORIZON_REPO=git://git.openstack.org/openstack/horizon
            NOVA_REPO=git://git.openstack.org/openstack/nova
            FORCE=yes
      - check-environment
      - mlnx-project-config
      - clean-environment
      - clone-devstack
      - apply-workarounds-pre-stack
      - configure-devstack-cinder
      - run-stacksh # Running Devstack
      - apply-workarounds-post-stack
      #- run-tests-cinder
      - run-tests-cinder-lio-simx
      - produce-readme-file
    properties:
      - build-discarder:
          days-to-keep: 70
          num-to-keep: 300
          artifact-days-to-keep: 70
          artifact-num-to-keep: 500
    publishers:
      - email-ext:
          recipients: mlnx-openstack-ci@dev.mellanox.co.il
          subject: cinder job is being failed, please debug
          failure: true
      - upload-console-log
    wrappers:
      - timeout:
          timeout: 320
          fail: true

- job-template:
    name: 'SimX-Run-ISER-ISCSI'
    node: '{node}'
    concurrent: false
    builders:
      - inject:
          properties-content: |
            LOGDIR=$WORKSPACE/ci-artifacts/logs
            EXT_SERVER=52.169.200.208
            LOGSERVER=cloudx@$EXT_SERVER
            HCA=mlx5
            IMAGE_SERVER=52.169.200.208
            PATH=$PATH:/usr/sbin
            GLANCE_REPO=git://git.openstack.org/openstack/glance
            NEUTRON_REPO=git://git.openstack.org/openstack/neutron
            KEYSTONE_REPO=git://git.openstack.org/openstack/keystone
            TEMPEST_REPO=git://git.openstack.org/openstack/tempest
            HORIZON_REPO=git://git.openstack.org/openstack/horizon
            NOVA_REPO=git://git.openstack.org/openstack/nova
            FORCE=yes
      - check-environment
      - mlnx-project-config
      - clean-environment
      - clone-devstack
      - apply-workarounds-pre-stack
      - configure-devstack-cinder
      - run-stacksh # Running Devstack
      - apply-workarounds-post-stack
      - run-tests-cinder
      #- run-tests-cinder-iscsi-simx
      - produce-readme-file
    properties:
      - build-discarder:
          days-to-keep: 70
          num-to-keep: 300
          artifact-days-to-keep: 70
          artifact-num-to-keep: 500
    publishers:
      - email-ext:
          recipients: mlnx-openstack-ci@dev.mellanox.co.il
          subject: cinder job is being failed, please debug
          failure: true
      - upload-console-log
    wrappers:
      - timeout:
          timeout: 320
          fail: true


- job-template:
    name: 'SimX-Run-VM'
    node: '{node}'
    concurrent: true
    builders:
      - inject:
          properties-content: |
            LOGDIR=$WORKSPACE/ci-artifacts/logs
            EXT_SERVER=52.169.200.208
            LOGSERVER=cloudx@$EXT_SERVER
            HCA=mlx5
            IMAGE_SERVER=52.169.200.208
            PATH=$PATH:/usr/sbin
            SIMX_SNAPSHOT=Simx2.4-2359_20170214
            FORCE=yes
      - load-vm
      - waitforonline-vm
      - produce-readme-file
    properties:
      - build-discarder:
          days-to-keep: 70
          num-to-keep: 300
          artifact-days-to-keep: 70
          artifact-num-to-keep: 500
    publishers:
      - email-ext:
          recipients: mlnx-openstack-ci@dev.mellanox.co.il
          subject: SimX job is being failed, please debug
          failure: true
      - upload-console-log
    wrappers:
      - timeout:
          timeout: 320
          fail: true


- job-template:
    name: 'Cinder-ISER-LIO'
    node: '{node}'
    builders:
      - inject:
          properties-content: |
            LOGDIR=$WORKSPACE/ci-artifacts/logs
            EXT_SERVER=52.169.200.208
            LOGSERVER=cloudx@$EXT_SERVER
            HCA=mlx4
            IMAGE_SERVER=52.169.200.208
            PATH=$PATH:/usr/sbin
            GLANCE_REPO=git://git.openstack.org/openstack/glance
            NEUTRON_REPO=git://git.openstack.org/openstack/neutron
            KEYSTONE_REPO=git://git.openstack.org/openstack/keystone
            TEMPEST_REPO=git://git.openstack.org/openstack/tempest
            HORIZON_REPO=git://git.openstack.org/openstack/horizon
            NOVA_REPO=git://git.openstack.org/openstack/nova
            CINDER_PROTOCOL=lioadm
            FORCE=yes
      - check-environment
      - mlnx-project-config
      - clean-environment
      - clone-devstack
      - apply-workarounds-pre-stack
      - configure-devstack-cinder
      - run-stacksh # Running Devstack
      - apply-workarounds-post-stack
      - apply-workarounds-post-stack-cinder-lio
      - run-tests-cinder
      - produce-readme-file
    properties:
      - build-discarder:
          days-to-keep: 70
          num-to-keep: 300
          artifact-days-to-keep: 70
          artifact-num-to-keep: 500
    publishers:
      - email-ext:
          recipients: mlnx-openstack-ci@dev.mellanox.co.il
          subject: cinder job is being failed, please debug
          failure: true
      - upload-console-log
    wrappers:
      - timeout:
          timeout: 320
          fail: true


######################################################
###               SimX NODE CI     ##################
######################################################
- job:
    name: SimX-Cinder-ISER-LIO
    project-type: multijob
    node: cloudx-17
    concurrent: false
#    triggers:
#      - timed: 'H 0 * * *'
    builders:
       - multijob:
           name: SimX-Run-VM
           condition: ALWAYS
           projects:
              - name: SimX-Run-VM
                current-parameters: true
                predefined-parameters: |
                   HCA=mlx5
                   FORCE=yes
                   SIMX_VM=cloudx-17-07
       - multijob:
           name: SimX-Run-ISER-LIO
           condition: SUCCESSFUL
           projects:
              - name: SimX-Run-ISER-LIO
                current-parameters: true
                predefined-parameters: |
                   HCA=mlx5
                   FORCE=yes
    properties:
      - build-discarder:
          days-to-keep: 70
          num-to-keep: 300
          artifact-days-to-keep: 70
          artifact-num-to-keep: 500
    wrappers:
      - timeout:
          timeout: 500

- job:
    name: SimX-Cinder-ISER-ISCSI
    project-type: multijob
    node: cloudx-17
#    concurrent: false
#    triggers:
#      - timed: 'H 0 * * *'
    builders:
       - multijob:
           name: Simx-ISCSI
           condition: ALWAYS
           projects:
              - name: SimX-Run-VM
                current-parameters: true
                predefined-parameters: |
                   HCA=mlx5
                   FORCE=yes
                   SIMX_VM=cloudx-17-04
       - multijob:
           name: SimX-Run-ISER-ISCSI
           condition: SUCCESSFUL
           projects:
              - name: SimX-Run-ISER-ISCSI
                current-parameters: true
                predefined-parameters: |
                   HCA=mlx5
                   FORCE=yes
    properties:
      - build-discarder:
          days-to-keep: 70
          num-to-keep: 300
          artifact-days-to-keep: 70
          artifact-num-to-keep: 500
    wrappers:
      - timeout:
          timeout: 500


- builder:
    name: run-tests-cinder
    builders:
      - shell: |
                #!/bin/bash +ex
                echo "============ Starting tempest tests ====================="
                tests=(
                       tempest.scenario.test_encrypted_cinder_volumes.TestEncryptedCinderVolumes
                       tempest.scenario.test_minimum_basic.TestMinimumBasicScenario
                       tempest.scenario.test_snapshot_pattern.TestSnapshotPattern
                       #tempest.scenario.test_volume_boot_pattern.TestVolumeBootPattern
                       tempest.scenario.test_volume_boot_pattern.TestVolumeBootPatternV2
                       tempest.scenario.test_stamp_pattern.TestStampPattern
                       tempest.api.volume.admin.test_multi_backend.VolumeMultiBackendTest
                       tempest.api.volume.admin.test_volume_types_extra_specs_negative
                )
                cd /opt/stack/tempest
                testr list-tests ${tests[@]}
                testr init
                virtualenv virt --no-site-packages
                . virt/bin/activate
                virt/bin/pip install -U -r requirements.txt
                testr run ${tests[@]}
                test_pass=$?
                deactivate

                if [[ $test_pass -ne 0 ]]; then
                    echo "FINISHED with ERROR: ############## $phase  ###################"
                    exit 1
                fi

- builder:
    name: run-tests-cinder-lio-simx
    builders:
      - shell: |
                #!/bin/bash +ex

                HCA=${HCA:-"mlx4"}
                mlx=`echo $HCA | sed s/mlx//g`
                let mlx=mlx-1
                export mlnx_port=`ibdev2netdev  | grep ${HCA}_0 |grep "port 1"| grep Up| awk '{print $5}'|tail -n1`

                sudo ifconfig $mlnx_port 1.1.1.1/16 up

                echo "============ Starting tempest tests ====================="
                tests=(tempest.scenario.test_encrypted_cinder_volumes.TestEncryptedCinderVolumes
                       tempest.scenario.test_minimum_basic.TestMinimumBasicScenario
                       tempest.scenario.test_snapshot_pattern.TestSnapshotPattern
                       tempest.scenario.test_volume_boot_pattern.TestVolumeBootPattern
                       tempest.scenario.test_volume_boot_pattern.TestVolumeBootPatternV2
                       tempest.scenario.test_stamp_pattern.TestStampPattern
                )
                cd /opt/stack/tempest
                testr list-tests ${tests[@]}
                testr init
                test_pass=0
                for test in ${tests[@]}; do
                    testr run $test
                    rc=$?
                    let test_pass=test_pass+$rc
                done

                if [[ $test_pass -ne 0 ]]; then
                    echo "FINISHED with ERROR: ############## $phase  ###################"
                    exit 1
                fi

- builder:
    name: run-tests-cinder-iscsi-simx
    builders:
      - shell: |
                #!/bin/bash +ex

                HCA=${HCA:-"mlx4"}
                mlx=`echo $HCA | sed s/mlx//g`
                let mlx=mlx-1
                export mlnx_port=`ibdev2netdev  | grep ${HCA}_0 |grep "port 1"| grep Up| awk '{print $5}'|tail -n1`

                sudo ifconfig $mlnx_port 1.1.1.1/16 up

                echo "============ Starting tempest tests ====================="
                tests=(tempest.scenario.test_encrypted_cinder_volumes.TestEncryptedCinderVolumes
                       tempest.scenario.test_minimum_basic.TestMinimumBasicScenario
                       tempest.scenario.test_snapshot_pattern.TestSnapshotPattern
                       #tempest.scenario.test_volume_boot_pattern.TestVolumeBootPattern
                       #tempest.scenario.test_volume_boot_pattern.TestVolumeBootPatternV2
                       tempest.scenario.test_stamp_pattern.TestStampPattern
                )
                cd /opt/stack/tempest
                testr list-tests ${tests[@]}
                testr init
                virtualenv virt --no-site-packages
                . virt/bin/activate
                virt/bin/pip install -U -r requirements.txt
                testr run ${tests[@]}
                test_pass=$?
                deactivate

                if [[ $test_pass -ne 0 ]]; then
                    echo "FINISHED with ERROR: ############## $phase  ###################"
                    exit 1
                fi


- builder:
    name: load-vm
    builders:
        - shell: |
            #!/bin/bash -x
            SIMX_VM=${SIMX_VM:-'cloudx-17-07'}
            phase="Loading VM $SIMX_VM"
            echo "STARTED: ############## $phase  ###################"
            sudo ls /var/lib/libvirt/images
            sudo virsh shutdown --domain $SIMX_VM 2>&1|tee
            #TODO add while it's not shuted down
            virsh list | grep $SIMX_VM
            sleep 120
            sudo virsh snapshot-revert --domain $SIMX_VM --snapshotname $SIMX_SNAPSHOT --running
            retries=10
            while [ $retries -gt 0 ]; do
                state=$(sudo virsh list | grep $SIMX_VM | awk '{print $3}')
                if [ $state == 'running'  ]; then
                    echo "$SIMX_VM is running"
                    exit 0
                fi
                let retries=retries-1
                sleep 6
            done
            echo "$SIMX_VM is not running"
            exit 1

- builder:
    name: waitforonline-vm
    builders:
        - python: |
            #!/usr/bin/python
            import requests
            import sys
            import time
            import os
            from pprint import pprint

            timeout = 500
            stop = time.time() + timeout

            SIMX_VM = os.environ.get('SIMX_VM','cloudx-17-07')
            pprint(os.environ)
            phase="Waiting for Online status of %s" % SIMX_VM
            print phase
            url = 'http://10.224.33.37:8080/computer/%s/api/json' % SIMX_VM
            start = time.time()
            print "Started", start
            print "Time", time.time()
            while (time.time() < stop):
                r = requests.get(url)
                if r.json()['offline']:
                    time.sleep(2)
                else:
                    t = (time.time() - start)
                    print "%s is Online after %d sec" % (SIMX_VM, t)
                    time.sleep(20)
                    sys.exit(0)
            print "%s still Offline after %s seconds" % (SIMX_VM, timeout)
            pprint(r.json())
            sys.exit(1)
