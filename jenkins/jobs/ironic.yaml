- job-template:
    name: 'Ironic-IB'
    node: '{node}'
    builders:
      - inject:
          properties-content: |
            LOGDIR=$WORKSPACE/ci-artifacts/logs
            EXT_SERVER=52.169.200.208
            LOGSERVER=cloudx@$EXT_SERVER
            HCA=mlx5
            IMAGE_SERVER=52.169.200.208
            PATH=$PATH:/usr/sbin
            FORCE=yes
      - check-environment
      - mlnx-project-config
      - clean-environment
      - clone-devstack
      - apply-workarounds-pre-stack
      - configure-devstack-{name}
      - run-stacksh # Running Devstack
      - apply-workarounds-post-stack
      #- apply-workarounds-post-stack-{name}
      #- 'run-tests-{name}-API'
      #- 'run-tests-{name}-configure-Real-BM'
      #- 'run-tests-{name}-run-Real-BM'
      - produce-readme-file
    properties:
      - build-discarder:
          days-to-keep: 70
          num-to-keep: 300
          artifact-days-to-keep: 70
          artifact-num-to-keep: 500
    publishers:
      - email-ext:
          recipients: lennyb@mellanox.com
          subject: Failed Mellanox CI {name}
          failure: true
          body: "Hello, my dear friend,\nunfortunately we have some issues in CI,\nplease, take a beer and lets take a look\n\n$DEFAULT_CONTENT\nhttp://$EXT_SERVER/$LOG_PATH/\nhttp://$EXT_SERVER/$JOB_NAME_$BUILD_NUMBER"
      - upload-console-log  #This line must be the last one


- project:
    name: Ironic-IB
    github-org: openstack-dev
    node: IRONIC_IB
    jobs:
        - 'Ironic-IB'

- builder:
    name: configure-devstack-Ironic-IB
    builders:
      - shell: |
          #!/bin/bash -ex
          phase="CONFIGURE-DEVSTACK-Ironic-IB"
          echo "STARTED: ############## $phase  ###################"
          cat > $WORKSPACE/devstack/local.conf <<EOF
          [[local|localrc]]
          #DOWNLOAD_DEFAULT_IMAGES=False
          #IMAGE_URLS="http://$IMAGE_SERVER/images/cirros-mellanox-x86_64-disk-ib.img,"
          MULTI_HOST=False
          ADMIN_PASSWORD=password
          MYSQL_PASSWORD=password
          RABBIT_PASSWORD=password
          SERVICE_PASSWORD=password
          DEFAULT_PASSWORD=password
          SWIFT_TEMPURL_KEY=password
          SWIFT_HASH=password
          SWIFT_ENABLE_TEMPURLS=True
          HOST_IP=$(host $(hostname) | cut -d' ' -f4)
          SUBNETPOOL_PREFIX_V4=172.0.0.0/16
          RECLONE=yes

          # Logging
          LOGDIR=\${LOGDIR:-/opt/stack/logs}
          LOGFILE=\$LOGDIR/stack.sh.log
          LOG_COLOR=False

          epioib_port=eth2

          PHYSICAL_INTERFACE=$epioib_port
          PHYSICAL_NETWORK=default
          NETWORK_API_EXTENSIONS=dhcp_agent_scheduler,external-net,ext-gw-mode,binding,quotas,agent,l3_agent_scheduler,provider,router,extraroute,security-group
          OVS_PHYSICAL_BRIDGE=br-$epioib_port

          disable_service n-net n-novnc horizon
          disable_service heat h-api h-api-cfn h-api-cw h-eng etcd3
          disable_service cinder c-sch c-api c-vol
          enable_service ironic ir-api ir-cond
          enable_service neutron q-svc q-agt q-dhcp q-l3 q-meta
          enable_service s-proxy s-object s-container s-account
          enable_service s-proxy s-object s-container s-account
          enable_service tempest

          # microversion patch
          #enable_plugin ironic https://github.com/openstack/ironic refs/changes/58/260358/6

          #TEMPEST_BRANCH=refs/changes/07/292307/6

          NOVA_BRANCH=refs/changes/40/266540/11
          enable_plugin ironic https://github.com/openstack/ironic refs/changes/63/264263/24
          enable_plugin ironic-inspector https://github.com/openstack/ironic-inspector refs/changes/57/264257/22
          enable_plugin tempest https://github.com/openstack/tempest refs/changes/07/292307/6

          Q_PLUGIN=ml2
          Q_AGENT=openvswitch
          Q_ML2_PLUGIN_MECHANISM_DRIVERS=openvswitch
          Q_ML2_PLUGIN_TYPE_DRIVERS=vlan,flat
          Q_ML2_TENANT_NETWORK_TYPE=vlan

          ENABLE_TENANT_TUNNELS=False
          TENANT_VLAN_RANGE=2:100

          IRONIC_BAREMETAL_BASIC_OPS=True
          IRONIC_INSPECTOR_RAMDISK_ELEMENT=ironic-agent
          IRONIC_INSPECTOR_BUILD_RAMDISK=False
          VIRT_DRIVER=ironic
          IRONIC_DEPLOY_DRIVER=pxe_ssh
          IRONIC_VM_LOG_DIR=$LOGDIR/ironic-bm-logs
          DEFAULT_INSTANCE_TYPE=baremetal
          BUILD_TIMEOUT=600
          IRONIC_CALLBACK_TIMEOUT=600
          IRONIC_BUILD_DEPLOY_RAMDISK=False
          IRONIC_ENABLED_DRIVERS=fake,pxe_ssh,pxe_ipmitool,agent_ipmitool
          IRONIC_VM_EPHEMERAL_DISK=1
          VOLUME_BACKING_FILE_SIZE=1000
          FORCE_CONFIG_DRIVE=True
          IRONIC_VM_SPECS_RAM=1024
          IRONIC_VM_COUNT=1
          IRONIC_DEPLOY_DRIVER_ISCSI_WITH_IPA=True
          IRONIC_RAMDISK_TYPE=coreos
          IRONIC_IPXE_ENABLED=True

          IRONIC_CONDUCTOR_CLEAN_NODES=false
          IRONIC_CONDUCTOR_DEPLOY_CALLBACK_TIMEOUT=600

          IRONIC_INSPECTOR_MANAGE_FIREWALL=False
          IRONIC_VM_SSH_PORT=22

          SCREEN_LOGDIR=\$LOGDIR/screen
          TEMPEST_ALLOW_TENANT_ISOLATION=False

          [[post-config||/etc/ironic-inspector/inspector.conf]]
          [DEFAULT]
          timeout=120
          [firewall]
          dnsmasq_interface = br-\$epioib_port
          manage_firewall = False

          [[post-config|/etc/neutron/dhcp_agent.ini]]
          [DEFAULT]
          dhcp_broadcast_reply=True

          [[post-config|/etc/ironic/ironic.conf]]
          [conductor]
          clean_nodes=false
          deploy_callback_timeout=600

          [[test-config|\$TEMPEST_CONFIG]]
          [auth]
          use_dynamic_credentials = True
          [baremetal]
          infrastructure_type = infiniband

          EOF
          echo "FINISHED: ############## $phase  ###################"

- builder:
    name: apply-workarounds-post-stack-Ironic-IB
    builders:
        - shell: |
            #!/bin/bash -x
            phase="APPLY-WORKAROUNDS-POST-Ironic-IB"

            #update
            #/opt/stack/nova/nova/virt/ironic/client_wrapper.py
            #set IRONIC_API_VERSION = (1, 17)
            #/opt/stack/ironic/ironic/api/controllers/v1/versions.py
            #set MIN_VERSION_STRING = '1.17'

